# -*- python -*-
# Copyright 2008, Google Inc.
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are
# met:
#
#     * Redistributions of source code must retain the above copyright
# notice, this list of conditions and the following disclaimer.
#     * Redistributions in binary form must reproduce the above
# copyright notice, this list of conditions and the following disclaimer
# in the documentation and/or other materials provided with the
# distribution.
#     * Neither the name of Google Inc. nor the names of its
# contributors may be used to endorse or promote products derived from
# this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
# OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.


Import('env')

######################################################################
# Simple RPC basic methods tests
######################################################################
env.ComponentProgram('srpc_test.nexe', 'srpc_test.c',
                     EXTRA_LIBS=['srpc', 'm', 'pthread'])
env.Publish('srpc_test.nexe', 'run', ['srpc_basic.html',
                                      'srpcperf.html',
                                      'srpc_shm.html',
                                      'srpc_plugin.html'])



env.ComponentProgram('srpc_shm.nexe', 'srpc_shm.c',
                     EXTRA_LIBS=['srpc', 'm', 'pthread'])
env.Publish('srpc_shm.nexe', 'run', [ 'srpc_shm.html' ])



env.ComponentProgram('srpc_nrd_server.nexe', 'srpc_nrd_server.c',
                     EXTRA_LIBS=['srpc', 'm', 'pthread'])
env.Publish('srpc_nrd_server.nexe', 'run', ['examples.html',
                                            '_README.txt',
                                            'srpc_sockaddr.html'])



env.ComponentProgram('srpc_nrd_client.nexe', 'srpc_nrd_client.c',
                     EXTRA_LIBS=['srpc', 'm', 'pthread'])
env.Publish('srpc_nrd_client.nexe', 'run', ['srpc_nrd_xfer.html'])



env.ComponentProgram('cat.nexe', 'cat.c',
                     EXTRA_LIBS=['srpc', 'm', 'pthread'])
env.Publish('cat.nexe', 'run', ['srpc_url_as_nacl_desc.html',
                                'srpc_url_as_nacl_desc_success.html'])

env.ComponentProgram('srpc_bidir.nexe', 'srpc_bidir.c',
                     EXTRA_LIBS=['srpc', 'm', 'pthread'])
env.Publish('srpc_bidir.nexe', 'run', ['srpc_bidir.html'])

# NOTE: sel_universal launches sel_ldr internally and we do not have a
# good hook to sneak in an emulator yet
if env['TARGET_ARCHITECTURE'] == 'x86':
  node = env.CommandSelLdrTestNacl(
      'srpc_basic_test.out',
      loader='sel_universal',
      command=[env.File('srpc_test.nexe')],
      stdin=env.File('srpc_basic_test.stdin'),
      stdout_golden=env.File('srpc_basic_test.stdout'),
      )
  env.AddNodeToTestSuite(node, ['small_tests'], 'run_srpc_basic_test')
