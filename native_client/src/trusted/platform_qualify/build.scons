# -*- python -*-
# Copyright 2008, Google Inc.
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are
# met:
#
#     * Redistributions of source code must retain the above copyright
# notice, this list of conditions and the following disclaimer.
#     * Redistributions in binary form must reproduce the above
# copyright notice, this list of conditions and the following disclaimer
# in the documentation and/or other materials provided with the
# distribution.
#     * Neither the name of Google Inc. nor the names of its
# contributors may be used to endorse or promote products derived from
# this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
# OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.


import sys

Import('env')

# TODO(gregoryd): eliminate need for the next line
env.FilterOut(CCFLAGS=['-Wextra'])

# NOTE: this is just stubbing things out to create a 'compatible' library.
#       Needs to be revisited once we understand arm better
if env['BUILD_ARCHITECTURE'] == 'arm' or env['TARGET_ARCHITECTURE'] == 'arm':
  env.ComponentLibrary('platform_qual_lib', ['dummy_qualify.c'])
  Return()

pql_inputs = [];

if env.Bit('windows'):
  pql_inputs += ['win/nacl_os_qualify.c']
elif env.Bit('mac'):
  pql_inputs += ['osx/nacl_os_qualify.c']
else:
  pql_inputs += ['linux/nacl_os_qualify.c']
pql_inputs += ['nacl_cpuwhitelist.c']

vcpuid_env = env.Clone()
if env.Bit('mac'):
  vcpuid_env.Append(CCFLAGS = ['-mdynamic-no-pic'])
if env.Bit('linux'):
  vcpuid_env.Append(CCFLAGS = ['-msse3'])
nacl_vcpuid = vcpuid_env.ComponentLibrary('vcpuid', 'vcpuid.c')
env.Append(LIBS = ['vcpuid', 'platform_qual_lib', 'ncvalidate'])


# ----------------------------------------------------------
#
# ----------------------------------------------------------
env.ComponentLibrary('platform_qual_lib', pql_inputs)


# These tests use assembly which seem to make the coverage instrumentation
# on windows unhappy. Disable them for now on coverage for windows.
# TODO(bradnelson): figure out a way to get coverage working for these.
if env.Bit('windows') and env.get('COVERAGE_ENABLED'):
  Return()

env.ComponentProgram('platform_qual_test', 'platform_qual_test.c')
env.ComponentProgram('nacl_cpuwhitelist_test', 'nacl_cpuwhitelist_test.c')
