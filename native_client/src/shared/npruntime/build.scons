# -*- python -*-
# Copyright 2008, Google Inc.
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are
# met:
#
#     * Redistributions of source code must retain the above copyright
# notice, this list of conditions and the following disclaimer.
#     * Redistributions in binary form must reproduce the above
# copyright notice, this list of conditions and the following disclaimer
# in the documentation and/or other materials provided with the
# distribution.
#     * Neither the name of Google Inc. nor the names of its
# contributors may be used to endorse or promote products derived from
# this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
# OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.


Import('env')

# TODO(gregoryd): eliminate the need for the next line
env.FilterOut(CCFLAGS=['-Wextra', '-Wswitch-enum'])

if env['TARGET_PLATFORM'] == 'LINUX':
    env.Append(CPPDEFINES=['XP_UNIX'])


if env['TARGET_PLATFORM'] == 'MAC':
    env.Append(
        CPPDEFINES = [
            'XP_MACOSX',
            'XP_UNIX',
            ['TARGET_API_MAC_CARBON', '1'],
            'NO_X11',
            'USE_SYSTEM_CONSOLE',
        ],
    )


if env['TARGET_PLATFORM'] == 'WINDOWS':
    env.Append(
        CCFLAGS = [
            '/EHsc',
        ],
        CPPDEFINES = [
            'XP_WIN', 'WIN32', '_WINDOWS'
        ],
    )

env_no_strict_aliasing = env.Clone()
if env.Bit('linux'):
   env_no_strict_aliasing.Append(CCFLAGS = ['-fno-strict-aliasing'])

NACL_NPRUNTIME_INPUTS = [
    'naclnp_util.cc',
    'npbridge.cc',
    'npn_gate.cc',
    'npnavigator.cc',
    'npobject_proxy.cc',
    'npobject_stub.cc',
    env_no_strict_aliasing.ComponentObject('nprpc.cc'),
    'npobject_handle.cc',
]
if env['TARGET_PLATFORM'] == 'WINDOWS':
  NACL_NPRUNTIME_INPUTS += [
    'win/util_win.cc',
  ]
if env['TARGET_PLATFORM'] == 'LINUX':
  NACL_NPRUNTIME_INPUTS += [
    'linux/util_linux.cc',
  ]
if env['TARGET_PLATFORM'] == 'MAC':
  NACL_NPRUNTIME_INPUTS += [
    'osx/util_osx.cc',
  ]
env.ComponentLibrary('google_nacl_npruntime', NACL_NPRUNTIME_INPUTS)
